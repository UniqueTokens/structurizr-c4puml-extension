@startuml(id=Container)
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/master/sprites/android-icon.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/master/sprites/docker-icon.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/master/sprites/kafka.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/master/sprites/postgresql.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
title My Software System - Containers
caption Test container view

SHOW_PERSON_OUTLINE()
LAYOUT_TOP_DOWN()

WithoutPropertyHeader()
AddProperty("prop 1", "value 1")
Person(6, "Maintainer", "some employee", "", $link="https://www.google.de")
Person_Ext(27, "User", "some user", "android-icon")
System_Boundary(1_boundary, My Software System) {
  Container(3, "App", "Android", "android app", "android-icon")
  WithoutPropertyHeader()
  AddProperty("prop 1", "value 1")
  Container(2, "Backend App", "Kotlin", "some backend app", "docker-icon", $link="https://www.google.de")
  ContainerDb(4, "Database", "postgres", "some database", "postgresql")
}
System_Boundary(15_boundary, GraphQL) {
  Container_Ext(25, "External Schema", "", "Schema provided by another team", "")
  Container(16, "Internal Schema", "", "Schema provided by our app", "")
}
System_Boundary(9_boundary, Broker) {
  ContainerQueue_Ext(10, "Topic: my.topic", "", "external topic", "kafka")
}
Container_Ext(25, "External Schema", "", "Schema provided by another team", "")
Container(16, "Internal Schema", "", "Schema provided by our app", "")
ContainerQueue_Ext(10, "Topic: my.topic", "", "external topic", "kafka")
Rel_D(3, 16, "reuqest data using", "GraphQL")
Rel_R(2, 4, "CRUD", "JPA")
Rel_D(2, 16, "provides subgraph to")
Rel_D(2, 10, "reads topic", "Avro")
Rel_D(25, 16, "extends schema")
Rel_D(6, 2, "Admin UI", "REST")
Rel_D(27, 3, "uses app")

LAYOUT_WITH_LEGEND()

@enduml